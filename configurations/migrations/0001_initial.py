# Generated by Django 4.2.7 on 2025-06-21 10:29

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('licenses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inp_AllowedSymbol', models.CharField(default='US30', help_text='Allowed Symbol (overridden by license)', max_length=20)),
                ('inp_StrictSymbolCheck', models.BooleanField(default=True, help_text='Enable Strict Symbol Validation (overridden by license)')),
                ('inp_SessionStart', models.CharField(default='08:45', help_text='Session Start Time (overridden by license)', max_length=5)),
                ('inp_SessionEnd', models.CharField(default='10:00', help_text='Session End Time (overridden by license)', max_length=5)),
                ('inp_FibLevel_1_1', models.DecimalField(decimal_places=5, default=1.325, help_text='Fibonacci Level 1.1 (overridden by license)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_1_05', models.DecimalField(decimal_places=5, default=1.05, help_text='Fibonacci Level 1.05 (Buy Entry)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_1_0', models.DecimalField(decimal_places=5, default=1.0, help_text='Fibonacci Level 1.0 (Session High)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_PrimaryBuySL', models.DecimalField(decimal_places=5, default=-0.05, help_text='Primary Buy Stop Loss Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_PrimarySellSL', models.DecimalField(decimal_places=5, default=1.05, help_text='Primary Sell Stop Loss Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeBuy', models.DecimalField(decimal_places=5, default=1.05, help_text='Hedging Buy Entry Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeSell', models.DecimalField(decimal_places=5, default=-0.05, help_text='Hedging Sell Entry Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeBuySL', models.DecimalField(decimal_places=5, default=0.0, help_text='Hedging Buy Stop Loss Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeSellSL', models.DecimalField(decimal_places=5, default=1.0, help_text='Hedging Sell Stop Loss Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_0_0', models.DecimalField(decimal_places=5, default=0.0, help_text='Fibonacci Level 0.0 (Session Low)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_Neg_05', models.DecimalField(decimal_places=5, default=-0.05, help_text='Fibonacci Level -0.05 (Sell Entry)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_Neg_1', models.DecimalField(decimal_places=5, default=-0.325, help_text='Fibonacci Level -0.325 (Sell TP)', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeBuyTP', models.DecimalField(decimal_places=5, default=1.3, help_text='Hedging Buy Take Profit Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_FibLevel_HedgeSellTP', models.DecimalField(decimal_places=5, default=-0.3, help_text='Hedging Sell Take Profit Level', max_digits=8, validators=[django.core.validators.MinValueValidator(-5.0), django.core.validators.MaxValueValidator(5.0)])),
                ('inp_PrimaryPendingTimeout', models.PositiveIntegerField(default=30, help_text='Primary Order Pending Timeout (overridden by license)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('inp_PrimaryPositionTimeout', models.PositiveIntegerField(default=60, help_text='Primary Position Timeout', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('inp_HedgingPendingTimeout', models.PositiveIntegerField(default=30, help_text='Hedging Order Pending Timeout', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('inp_HedgingPositionTimeout', models.PositiveIntegerField(default=60, help_text='Hedging Position Timeout', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='licenses.license')),
            ],
            options={
                'verbose_name': 'Trading Configuration',
                'verbose_name_plural': 'Trading Configurations',
            },
        ),
    ]
